name: boutiq_provider
description: Get your boutique to hand

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.0 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter



  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  introduction_screen: 

  #?equatable is a Dart package that helps you to implement value based equality without needing to explicitly override == and hashCode.
  equatable: ^2.0.5

  #?flutter_native_splash is a Flutter plugin that allows you to easily create a native splash screen.
  flutter_native_splash:
    ^2.2.16

  #?  go_router is a Flutter package that allows you to easily manage your app's navigation.
  go_router: ^13.2.5

  #? flutter_riverpod is a Flutter package that provides a set of utilities for using the Riverpod state management library.
  flutter_riverpod: ^2.1.1

  #?  flutter_bloc is a Flutter package that helps you to easily implement the BLoC (Business Logic Component) design pattern.
  flutter_bloc: ^8.1.3

  #? flutter_form_bloc is a Flutter package that helps you to easily create forms with validation.
  bloc: any
  formz: ^0.7.0

  #?  get_it is a service locator that makes it easy to access services throughout your app.
  get_it: ^7.2.0

  #? freezed_annotation is a Dart package that provides a set of utilities for generating code for the freezed package.
  freezed_annotation: ^2.2.0

  #? dartz is a functional programming library for Dart and Flutter. It provides a set of data types and functions to work with them.
  dartz: ^0.10.1

  #? A powerful HTTP client for Dart/Flutter, which supports global configuration, interceptors,
  #? FormData, request cancellation, file uploading/downloading, timeout, and custom adapters etc
  dio: ^5.4.1
#  #? Retry failed HTTP requests
#  dio_smart_retry: any

  retrofit: '>=4.0.0 <5.0.0'
  logger: any  #for logging purpose
  json_annotation: ^4.8.1

  #? google_fonts is a Flutter package that provides a set of fonts from Google Fonts.
  google_fonts: ^6.2.1

  #? flutter_svg is a Flutter package for drawing SVG pictures.
  flutter_svg: ^2.0.6

  #?  loading_animation_widget is a Flutter package that provides a loading animation widget.
  loading_animation_widget: ^1.1.0+5

  #? internet_connection_checker is a Flutter plugin to check the internet connection.
  internet_connection_checker: ^1.0.0+1
  
    #? get_storage is a Flutter plugin for persistent storage.
  get_storage: ^2.0.3

  flutter_screenutil: ^5.9.0

  #? firebase packages
  firebase_core: ^2.15.1
  cloud_firestore: ^4.9.0
  firebase_storage: ^11.2.6
  firebase_crashlytics: ^3.3.5
  firebase_remote_config: ^4.2.5
  firebase_analytics: ^10.4.5
  firebase_auth: ^4.7.3
  image_picker: ^1.0.4
  dotted_border: ^2.0.0+3
  data_grid: ^0.1.0
  flutter_staggered_grid_view: ^0.7.0
  order_tracker_zen: ^1.0.0+4
  intl: ^0.17.0

dev_dependencies:

  #? freezed is a code generation library for Dart that helps you to write immutable models with ease.
  freezed: ^2.3.2
  #? build_runner is a Dart package that provides a concrete way of generating files using Dart code, outside of tools like pub and the Dart VM.
  build_runner: ^2.3.3
  #? import_sorter is a Dart package that helps you to sort your imports.
  import_sorter: ^4.6.0
  #? json_serializable is a Dart package that helps you to convert your Dart objects to JSON and vice versa.
  json_serializable: ^6.6.2
  #?  very_good_analysis is a Dart package that provides a set of lint rules for Dart and Flutter.
  very_good_analysis: ^5.1.0

  cached_network_image: ^3.2.3

  retrofit_generator: '>=7.0.0 <8.0.0'

  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  assets:
    - assets/images/
    - assets/fonts/

  fonts:
    - family: onest
      fonts:
        - asset: assets/fonts/onest-bold.ttf
        - asset: assets/fonts/onest-extra-bold.ttf
        - asset: assets/fonts/onest-light.ttf
        - asset: assets/fonts/onest-medium.ttf
        - asset: assets/fonts/onest-regular.ttf

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
